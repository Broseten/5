// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IW5_Swagger.ConsoleApp.API
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for APIClient.
    /// </summary>
    public static partial class APIClientExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IList<RecipeModelInner> RecipesGetAllItems(this IAPIClient operations)
            {
                return operations.RecipesGetAllItemsAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<RecipeModelInner>> RecipesGetAllItemsAsync(this IAPIClient operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.RecipesGetAllItemsWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<RecipeModelInner>> RecipesGetAllItemsWithHttpMessages(this IAPIClient operations, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.RecipesGetAllItemsWithHttpMessagesAsync(customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static RecipeModelInner RecipesGetItem(this IAPIClient operations, System.Guid? id = default(System.Guid?))
            {
                return operations.RecipesGetItemAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<RecipeModelInner> RecipesGetItemAsync(this IAPIClient operations, System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.RecipesGetItemWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<RecipeModelInner> RecipesGetItemWithHttpMessages(this IAPIClient operations, System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.RecipesGetItemWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='description'>
            /// </param>
            /// <param name='foodType'>
            /// Possible values include: '0', '1', '2'
            /// </param>
            /// <param name='id'>
            /// </param>
            public static void RecipesInsertItem(this IAPIClient operations, string name = default(string), string description = default(string), string foodType = default(string), System.Guid? id = default(System.Guid?))
            {
                operations.RecipesInsertItemAsync(name, description, foodType, id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='description'>
            /// </param>
            /// <param name='foodType'>
            /// Possible values include: '0', '1', '2'
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task RecipesInsertItemAsync(this IAPIClient operations, string name = default(string), string description = default(string), string foodType = default(string), System.Guid? id = default(System.Guid?), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.RecipesInsertItemWithHttpMessagesAsync(name, description, foodType, id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='description'>
            /// </param>
            /// <param name='foodType'>
            /// Possible values include: '0', '1', '2'
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse RecipesInsertItemWithHttpMessages(this IAPIClient operations, string name = default(string), string description = default(string), string foodType = default(string), System.Guid? id = default(System.Guid?), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.RecipesInsertItemWithHttpMessagesAsync(name, description, foodType, id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

    }
}
